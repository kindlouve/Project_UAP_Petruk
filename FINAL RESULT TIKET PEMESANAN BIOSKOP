#include <iostream>
#include <fstream>
#include <vector>
#include <map>
#include <string>
#include <algorithm>
#include <cstring> 
#include <stack>
#include <queue>
#include <list>

using namespace std;

struct User{
    string username;
    string password;
};
struct Film{
    string title;
    string showtime;
};

class Cinema{
private:
    vector<User> users;
    map<string, vector<vector<string>>> seats;
    vector<Film> films;

public:
    Cinema(){
        films.push_back({"How To Make Millions Before Grandma Dies", "20:20"});
        films.push_back({"The Garfield Movie", "14:15"});
        films.push_back({"Inside Out 2", "18:50"});
        films.push_back({"Dilan 1983 Wo Ai Ni", "13:15"});
        films.push_back({"Avatar The Way of Water", "21:00"});

        for (const auto& film : films){
            seats[film.title] = vector<vector<string>>(8, vector<string>(8, "Tersedia"));
        }
    }
    void registerUser(const string& username, const string& password){
        users.push_back({username, password});
        ofstream userFile("users.txt", ios::app);
        userFile << username << " " << password << endl;
        userFile.close();
    }
    bool loginUser(const string& username, const string& password){
        ifstream userFile("users.txt");
        string u, p;
        while (userFile >> u >> p) {
            if (u == username && p == password){
                userFile.close();
                return true;
            }
        }
        userFile.close();
        return false;
    }
    void displayFilms(){
        for (size_t i = 0; i < films.size(); i++){
            cout << i + 1 << ". " << films[i].title << " pada pukul " << films[i].showtime << endl;
        }
    }
    void displaySeats(const string& filmTitle){
        const auto& filmSeats = seats[filmTitle];
        for (size_t i = 0; i < filmSeats.size(); i++){
            for (size_t j = 0; j < filmSeats[i].size(); j++){
                cout << (char)('A' + i) << j + 1 << ": " << filmSeats[i][j] << "\t";
            }
            cout << endl;
        }
    }
    bool bookSeat(const string& filmTitle, const string& seat){
        int row = seat[0] - 'A';
        int col = stoi(seat.substr(1)) - 1;
        if (row >= 0 && row < 8 && col >= 0 && col < 8 && seats[filmTitle][row][col] == "Tersedia"){
            seats[filmTitle][row][col] = "Dipesan";
            return true;
        }
        return false;
    }
    void confirmBooking(const string& filmTitle, const string& seat, const string& day){
        int price = (day == "Sabtu" || day == "Minggu") ? 50000 : 40000;
        cout << "Pemesanan Berhasil!" << endl;
        cout << "Film: " << filmTitle << endl;
        cout << "Kursi: " << seat << endl;
        cout << "Hari: " << day << endl;
        cout << "Harga: Rp. " << price << endl;
        cout << "Scan barcode ini untuk masuk." << endl;
        cout << "|| || || || || || || || || ||" << endl;
        cout << "|| || || || || || || || || ||" << endl;
        cout << "|| || || || || || || || || ||" << endl;
        cout << "|| || || || || || || || || ||" << endl;
        cout << "1  2  3  4  5  6  7  8  9  0" << endl;
    }
    const vector<Film>& getFilms() const{
        return films;
    }
    vector<int> divideVector(const vector<int>& vec){
        int n = vec.size();
        vector<int> leftHalf(vec.begin(), vec.begin() + n / 2);
        return leftHalf;
    }
    void mergeSort(vector<int>& vec){
        if (vec.size() <= 1)
            return;

        vector<int> left = divideVector(vec);
        vector<int> right(vec.begin() + vec.size() / 2, vec.end());

        mergeSort(left);
        mergeSort(right);

        merge(left.begin(), left.end(), right.begin(), right.end(), vec.begin());
    }
};

int main(){
    Cinema cinema;
    int choice;
    string username, password, filmChoice, seatChoice, day;

    while (true){
        cout << "\nSelamat datang di Cinema XXI" << endl;
        cout << "1. Daftar" << endl;
        cout << "2. Masuk" << endl;
        cout << "3. Keluar" << endl;
        cout << "Masukkan pilihan: ";
        cin >> choice;

        if (choice == 1){
            cout << "\nMasukkan username: ";
            cin >> username;
            cout << "Masukkan password: ";
            cin >> password;
            cinema.registerUser(username, password);
            cout << "Pendaftaran berhasil!" << endl;
        } else if (choice == 2){
            cout << "\nMasukkan username: ";
            cin >> username;
            cout << "Masukkan password: ";
            cin >> password;
            if (cinema.loginUser(username, password)){
                cout << "Login berhasil!\n" << endl;
                cinema.displayFilms();
                cout << "Pilih film (1-5): ";
                cin >> choice;
                if (choice < 1 || choice > 5){
                    cout << "Pilihan tidak valid" << endl;
                    continue;
                }
                filmChoice = cinema.getFilms()[choice - 1].title;
                cinema.displaySeats(filmChoice);
                cout << "\nPilih kursi (contoh: A1): ";
                cin >> seatChoice;
                if (cinema.bookSeat(filmChoice, seatChoice)){
                    cout << "Masukkan hari (Senin-Minggu): ";
                    cin >> day;
                    cinema.confirmBooking(filmChoice, seatChoice, day);
                } else {
                    cout << "Kursi sudah dipesan atau kursi tidak valid!" << endl;
                }
            } else {
                cout << "Username atau password tidak valid!" << endl;
            }
        } else if (choice == 3){
            cout << "Terima kasih." << endl;
            break;
        } else {
            cout << "Pilihan tidak valid!" << endl;
        }
    }
    return 0;
}
